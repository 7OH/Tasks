
Функция ПолучитьМассивПолучателей(МассивПользователейКому) 
	
	МассивПолучателейАськи = Новый Массив();
	
	Для Каждого пПользователь из МассивПользователейКому Цикл
		
		// Проверка на разрешение получать рассылку на аську
		// необходима если один список рассылки используется в нескольких местах 
		// и в списке рассылки есть пользователи у которых рассылка на аську запрещена
		Если НЕ пПользователь.szПолучатьРассылкуПоАське Тогда
			Продолжить;
		Конецесли;
		
		Если НЕ ЗначениеЗаполнено(пПользователь.szНомерАськи) и НЕ ЗначениеЗаполнено(пПользователь.ИДКому) Тогда
			Продолжить;
		Конецесли;
		
		НастройкаАськи = Новый Структура();
			НастройкаАськи.Вставить("ИД",пПользователь.szНомерАськи);
			НастройкаАськи.Вставить("Пользователь",пПользователь);
		
		МассивПолучателейАськи.Добавить(НастройкаАськи);
		
	КонецЦикла;
	
	Возврат МассивПолучателейАськи;
	
КонецФункции

Функция ВыполнитьРассылку(ДопПараметры) Экспорт

	// ПользовательКому переносим в массив МассивПользователейКому
	// Таким образом одной процедурой ВыполнитьРассылку() сообщение отправляется и одному пользователю и списку
	Если НЕ ДопПараметры.Свойство("МассивПользователейКому") Тогда
		Если ДопПараметры.Свойство("ПользовательКому") Тогда
			МассивПользователейКому = Новый Массив();
			МассивПользователейКому.Добавить(ДопПараметры.ПользовательКому);
			ДопПараметры.Вставить("МассивПользователейКому",МассивПользователейКому);
		Конецесли;
	Конецесли;
	
	МассивПользователейДляОтправки = ПолучитьМассивПолучателей(ДопПараметры.МассивПользователейКому);
	
	Если МассивПользователейДляОтправки.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	ТекстСообщения = ДопПараметры.ТекстПисьма;
	
	ВТДопПараметры = Новый Структура();
	Для каждого ЭлДопПараметры из ДопПараметры Цикл
		ВТДопПараметры.Вставить(ЭлДопПараметры.Ключ, ЭлДопПараметры.Значение);		
	КонецЦикла;
	
	ВТДопПараметры.Вставить("МассивПользователейДляОтправки",МассивПользователейДляОтправки);
	ВТДопПараметры.Вставить("ТекстСообщения",ТекстСообщения);
	
	рез=ВыполнитьРассылкуВАську(ВТДопПараметры);
	
	Возврат рез;
	
КонецФункции

Функция ВыполнитьРассылкуВАську(ДопПараметры) экспорт
	// Выполняет рассылку в аську 
	// Доппараметры:
	// МассивПользователейДляОтправки - массив с элементами:
	//		"ИД" - номер аськи
	//  	"Пользователь" - элемент справочника Пользователи 
	// ТекстСообщения
	
	//Спр = Справочники.узКонстанты; 
	//Элем = Спр.НайтиПоНаименованию("ТокенБота");
	//Если Элем.Пустая() Тогда
	//	Элем = Спр.СоздатьЭлемент();
	//	Элем.Наименование = "ТокенБота";
	//	Элем.Значение = "";
	//	Элем.Записать();
	//КонецЕсли;	
	
	ТокенБота = Справочники.узКонстанты.szПолучитьКонстанту("ТокенБота","");
	
	МассивПользователейДляОтправки = ДопПараметры.МассивПользователейДляОтправки;
	ТекстСообщения = ДопПараметры.ТекстСообщения;
	
	Для Каждого элемПолучатель Из МассивПользователейДляОтправки Цикл
		
		ПараметрыЗапроса = Новый Структура;
		ПараметрыЗапроса.Вставить("token", ТокенБота);
		ПараметрыЗапроса.Вставить("chatId", элемПолучатель.ИД);
		ПараметрыЗапроса.Вставить("text", ТекстСообщения);
		Ресурс="https://agent.mail.ru/bot/v1/messages/sendText";

		Результат=КоннекторHTTP.GetJson(Ресурс,ПараметрыЗапроса);
		
		Если Результат["ok"] Тогда 
			Возврат "ОК";
		Иначе
			Возврат "Ошибка " + Результат["description"];
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции 

Функция ПолучитьСообщение(ПоследнееСообщение, ВремяОжидания) Экспорт
	// Единоразово запускает прием сообщений.
	// Служит для демонстрации и проверки работоспособности
	
	ТокенБота = Константы.szАська_ТокенБота.Получить();
	
	Если ВремяОжидания=0 тогда
		ВремяОжидания=3;
	КонецЕсли;
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("token", ТокенБота);
	ПараметрыЗапроса.Вставить("lastEventId", ПоследнееСообщение);
	ПараметрыЗапроса.Вставить("pollTime", ВремяОжидания);
	Ресурс="https://agent.mail.ru/bot/v1/events/get";

	Результат=КоннекторHTTP.GetJson(Ресурс,ПараметрыЗапроса);
	
	Рез="";
	Массив = Результат["events"];
	КС = Массив.Количество()-1;
	Для Ном=0 По КС Цикл
		Рез = Рез+Массив[Ном]["eventId"] + "  from:" + Массив[Ном]["payload"]["from"]["userId"] + "  " + Массив[Ном]["payload"]["text"] + Символы.ПС;
	КонецЦикла;	
	
	Возврат Рез;
КонецФункции

Функция ПолучитьСообщениеРегламент(Длительность) Экспорт
	
	ТокенБота = Константы.szАська_ТокенБота.Получить();
	ПоследнееСообщение=Константы.szАськаИДПоследнегоСообщения.Получить();
	
	ВремяОжидания=Длительность;
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("token", ТокенБота);
	ПараметрыЗапроса.Вставить("lastEventId", ПоследнееСообщение);
	ПараметрыЗапроса.Вставить("pollTime", ВремяОжидания);
	Ресурс="https://agent.mail.ru/bot/v1/events/get";

	Результат=КоннекторHTTP.GetJson(Ресурс,ПараметрыЗапроса);
	
	МассивСообщений=новый Массив;
	
	Массив = Результат["events"];
	КС = Массив.Количество()-1;
	Для Ном=0 По КС Цикл
		Если Массив[Ном]["type"]="newMessage" тогда
			Сообщение=Новый Структура;
			Сообщение.Вставить("eventId",Массив[Ном]["eventId"]);
			Сообщение.Вставить("userId",Массив[Ном]["payload"]["from"]["userId"]);
			Сообщение.Вставить("text",Массив[Ном]["payload"]["text"]);
			МассивСообщений.Добавить(Сообщение);
		КонецЕсли;
	КонецЦикла;	
	
	Если КС>=0 Тогда 
		ИДПоследнегоСообщения=Число(Массив[КС]["eventId"]);
		Константы.szАськаИДПоследнегоСообщения.Установить(ИДПоследнегоСообщения);
	КонецЕсли;
	
	Возврат МассивСообщений;
КонецФункции
 
Функция ОтправитьФайл(Получатель,ИмяФайла) Экспорт 
	// Отправляет файл ИмяФайла пользователю Получатель.
	// Файл должен быть доступен на сервере
	
	ТокенБота = Константы.szАська_ТокенБота.Получить();
	ИДПолучатель=Получатель.szНомерАськи;
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ИмяФайла);

	Ресурс="https://agent.mail.ru/bot/v1//messages/sendFile";
	
	Файлы = Новый Массив;
	Файлы.Добавить(Новый Структура("Имя,Данные,ИмяФайла", "file", ДвоичныеДанные, "file1.txt"));

	Данные = Новый Структура("token,chatId", ТокенБота, ИДПолучатель);

	Результат = КоннекторHTTP.PostJson(Ресурс, Неопределено, Новый Структура("Файлы,Данные", Файлы, Данные));
	
	Если Результат["ok"] Тогда 
		Возврат "ОК";
	Иначе
		Возврат "Ошибка " + Результат["description"];
	КонецЕсли;
	

КонецФункции



